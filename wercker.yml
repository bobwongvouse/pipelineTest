box: golang

dev:
        steps:
                -setup-go-workspace:
                        package-dir: github.com/bobwongvouse/pipelineTest

                -script:
                        name: env
                        code: env
                
                -script:
                        name: go get
                        code: |
                                cd $WERCKER_SOURCE_DIR
                                go version
                                go get -u github.com/Masterminds/glide
                        export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
                        glide install
               
                -internal/watch:
                        code: go run main.go
                        reload: true
                                
# Build definition
build:
        # The steps that will be executed on build
        steps:
                # Sets the go workspace and places you package
                # at the right place in the workspace tree
                - setup-go-workspace
                        package-dir:github.com/bobwongvouse/pipelineTest

                  # Gets the dependencies
                - script:
                        name: env 
                        code: env

                - script:
                        name: go get
                        code: |
                                cd $WERCKER_SOURCE_DIR
                                go version
                                go get -u github.com/Masterminds/glide
                        export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
                        glide install

                        # Build the project
                - script:
                        name: go build
                        code: |
                                go build 

                        # Test the project
                - script:
                        name: go test
                        code: |
                                go -v $(glide novendor)

                - script:
                        name: copy files to wercker output
                        code: |
                                cp -R ./ ${WERCKER_OUTPUT_DIR}


                deploy:
                        steps:
                                -internal/docker-push:
                                        username: $DOCKER_USERNAME
                                        password: $DOCKER_PASSWORD
                                        cmd: /pipeline/source/hello
                                        port: "8080"
                                        tag: latest
                                        repository: tspeech/testpipeline
                                        registry: https://registry.hub.docker.com

                                        -cng/cf-deploy:
                                                api: $API
                                                user: $USER
                                                password: $PASSWORD
                                                org: $ORG
                                                space: $SPACE
                                                appname: wercker-hello
                                                docker_image: tspeech/testpipeline
